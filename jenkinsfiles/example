#!/bin/env groovy

pipeline {
  agent none

  environment {
    IMAGE = "liatrio/petclinic-tomcat"
  }

  stages {
    stage('Build') {
      agent any
      steps {
        sh 'mvn clean install'
	echo 'Build Complete'
      }
    }
    stage('Package') {
      agent any
      steps {
        script {
          if ( env.BRANCH_NAME == 'master' ) {
            pom = readMavenPom file: 'pom.xml'
            TAG = pom.version
          } else {
            TAG = env.BRANCH_NAME
          }
          sh "docker build -t ${env.IMAGE}:${TAG} ."
	  echo 'Package Creation Successful'
        }
      }
    }
    stage('Build DB Schema Migration') {
      agent any
      steps {
        //build schema migration
        sh 'sleep 4'
        echo 'Schema Migration Built'
      }
    }
    stage('Deploy App Tier to Dev Environment') {
      agent any
      steps {
        sh 'docker rm -f petclinic-tomcat-temp || true'
        sh "docker run -d -p 9966:8080 --name petclinic-tomcat-temp ${env.IMAGE}:${TAG}
        echo 'App Tier Deployed to Dev Environment'"
      }
    }
    stage('Run Schema Migrations on Dev DB') {
      agent any
      steps {
        //run schema migrations on dev db
        sh 'sleep 4'
        echo 'Dev Schema Update Successful'
      }
    }
    stage('Run Integration Tests Dev') {
	agent any
	steps {
	  //integration test run dev
	  sh 'sleep 10'
	}
    }
    stage('Smoke-Test Dev') {
      agent any
      steps {
        //Smoke tests to validate Dev Environment
        sh 'sleep 12'
        echo 'Smoke Tests Passed'
      }
    }
    stage('Deploy App Tier to Production') {
      agent any
      steps {
        //Production App Tier Deployment
        sh 'sleep 4'
	echo 'Production App Tier Deployment Successful'
      }
    }
    stage('Run Schema Migrations on Dev DB') {
      agent any
      steps {
        //Production Schema Updates
        sh 'sleep 7'
	echo 'Production Schema Updated'
      }
    }
    stage('Run Production Deployment Verification Tests') {
      agent any
      steps {
        //Production deployment verification tests
        sh 'sleep 9'
	echo 'Production deployemnt verification tests Passed'
      }
    }
  }
}
